---
services:
  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    user: "1000:1000"
    restart: unless-stopped
    ports:
      - "9090:9090"
    environment:
      - UPTIME_KUMA_HOST=${UPTIME_KUMA_HOST}
      - UPTIME_KUMA_PORT=${UPTIME_KUMA_PORT}
      - UPTIME_KUMA_USER=${UPTIME_KUMA_USER}
      - UPTIME_KUMA_PASS=${UPTIME_KUMA_PASS}
    volumes:
      - /DATA/AppData/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /DATA/AppData/prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"

  grafana:
    image: grafana/grafana:11.6.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3003:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - TZ=${TZ}
    volumes:
      - /DATA/AppData/grafana/data:/var/lib/grafana
    depends_on:
      - prometheus
  uptime-kuma:
    container_name: uptime-kuma
    hostname: uptime-kuma
    image: louislam/uptime-kuma:1.23.16
    ports:
      - "3001:3001"
    restart: unless-stopped
    volumes:
      - /DATA/AppData/uptime-kuma/data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock:ro

# gatus:
#   image: twinproduction/gatus:5.0.0
#   restart: unless-stopped
#   metrics: true
#   storage:
#     type: postgres
#     path: ${GATUS_PATH}
#   ports:
#     - "8083:8080"
#   volumes:
#     - /DATA/AppData/gatus/config:/config
